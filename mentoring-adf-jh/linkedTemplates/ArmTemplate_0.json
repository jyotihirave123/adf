{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "mentoring-adf-jh"
		},
		"lnkazurementoringstoragejh_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'lnkazurementoringstoragejh'"
		},
		"lnkazuresqldatamartdb_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'lnkazuresqldatamartdb'"
		},
		"lnkazuresqlmoviesdb_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'lnkazuresqlmoviesdb'"
		},
		"AzureDataLakeStoragejh_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://azurementoringdatalakejh.dfs.core.windows.net"
		},
		"AzureKeyVaultjh_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://mentoring-key-vault-jh.vault.azure.net/"
		},
		"lnkazuresqldatamartdb_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "azure-mentoring-jh.database.windows.net"
		},
		"lnkazuresqldatamartdb_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "DataMart"
		},
		"lnkazuresqldatamartdb_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "azureuser"
		},
		"lnkazuresqlmoviesdb_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "azure-mentoring-jh.database.windows.net"
		},
		"lnkazuresqlmoviesdb_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "movies"
		},
		"lnkazuresqlmoviesdb_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "azureuser"
		},
		"Azurementoringstoragejh_properties_typeProperties_sasUri_secretName": {
			"type": "string",
			"defaultValue": "SASURL"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStoragejh')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStoragejh_properties_typeProperties_url')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVaultjh')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVaultjh_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/lnkazurementoringstoragejh')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('lnkazurementoringstoragejh_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/lnkazuresqldatamartdb')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('lnkazuresqldatamartdb_properties_typeProperties_server')]",
					"database": "[parameters('lnkazuresqldatamartdb_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('lnkazuresqldatamartdb_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('lnkazuresqldatamartdb_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/lnkazuresqlmoviesdb')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('lnkazuresqlmoviesdb_properties_typeProperties_server')]",
					"database": "[parameters('lnkazuresqlmoviesdb_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('lnkazuresqlmoviesdb_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('lnkazuresqlmoviesdb_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SinkBlobDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStoragejh",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "movies",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStoragejh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_azuresqldatamartsourcedb')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lnkazuresqldatamartdb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimDate"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lnkazuresqldatamartdb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_azuresqlmoviessinkdb')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lnkazuresqlmoviesdb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "ratings_part1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lnkazuresqlmoviesdb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_blobdestinationfolder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lnkazurementoringstoragejh",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "destination"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lnkazurementoringstoragejh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_blobsourcefolder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lnkazurementoringstoragejh",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "source"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lnkazurementoringstoragejh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Azurementoringstoragejh')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"sasUri": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVaultjh",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('Azurementoringstoragejh_properties_typeProperties_sasUri_secretName')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVaultjh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyDataFromDatamartToMoviesDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_azuresqldatamartsourcedb",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_azuresqlmoviessinkdb",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_azuresqldatamartsourcedb')]",
				"[concat(variables('factoryId'), '/datasets/ds_azuresqlmoviessinkdb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyFIlesFromsourceFolderToDestinationFolder')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_blobsourcefolder",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_blobdestinationfolder",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delete1",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_blobsourcefolder",
								"type": "DatasetReference",
								"parameters": {}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "lnkazurementoringstoragejh",
									"type": "LinkedServiceReference"
								}
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "*.csv",
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_blobsourcefolder')]",
				"[concat(variables('factoryId'), '/datasets/ds_blobdestinationfolder')]",
				"[concat(variables('factoryId'), '/linkedServices/lnkazurementoringstoragejh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_blobsourcefolder",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_azuresqlmoviessinkdb",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy data2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_blobsourcefolder",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_blobdestinationfolder",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delete1",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Copy data2",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_blobsourcefolder",
								"type": "DatasetReference",
								"parameters": {}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "lnkazurementoringstoragejh",
									"type": "LinkedServiceReference"
								}
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_blobsourcefolder')]",
				"[concat(variables('factoryId'), '/datasets/ds_azuresqlmoviessinkdb')]",
				"[concat(variables('factoryId'), '/datasets/ds_blobdestinationfolder')]",
				"[concat(variables('factoryId'), '/linkedServices/lnkazurementoringstoragejh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceBlobCSVDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Azurementoringstoragejh",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "movies"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "adult",
						"type": "String"
					},
					{
						"name": "belongs_to_collection",
						"type": "String"
					},
					{
						"name": "budget",
						"type": "String"
					},
					{
						"name": "genres",
						"type": "String"
					},
					{
						"name": "homepage",
						"type": "String"
					},
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "imdb_id",
						"type": "String"
					},
					{
						"name": "original_language",
						"type": "String"
					},
					{
						"name": "original_title",
						"type": "String"
					},
					{
						"name": "overview",
						"type": "String"
					},
					{
						"name": "popularity",
						"type": "String"
					},
					{
						"name": "poster_path",
						"type": "String"
					},
					{
						"name": "production_companies",
						"type": "String"
					},
					{
						"name": "production_countries",
						"type": "String"
					},
					{
						"name": "release_date",
						"type": "String"
					},
					{
						"name": "revenue",
						"type": "String"
					},
					{
						"name": "runtime",
						"type": "String"
					},
					{
						"name": "spoken_languages",
						"type": "String"
					},
					{
						"name": "status",
						"type": "String"
					},
					{
						"name": "tagline",
						"type": "String"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "video",
						"type": "String"
					},
					{
						"name": "vote_average",
						"type": "String"
					},
					{
						"name": "vote_count",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Azurementoringstoragejh')]"
			]
		}
	]
}